---
description: Documentation for the U-M Library Design System.
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <title>{{ title or eleventyNavigation.key }} ‚Äî Design System ‚Äî University of Michigan Library</title>
    <meta name="description" content="{{ description }}"/>

    <!-- Social sharing meta -->
    <meta property="og:url" name="twitter:url" content="https://design-system.lib.umich.edu{{ page.url }}">
    <meta property="og:title" name="twitter:title"  content="{{ title or eleventyNavigation.key }} | Design System | University of Michigan Library"/>
    <meta property="og:description" name="twitter:description"  content="{{ description }}"/>
    <meta property="og:image" name="twitter:image"  content="{{ site.cloudinary_url }}/image/upload/c_fill,g_faces,h_630,w_1200/l_text:Crimson%20Text_160_center:{{ title or eleventyNavigation.key }},co_rgb:334354,c_fit/ds_share_bg.png"/>
    <meta property="og:image:alt" name="twitter:image:alt"  content="{{ title }}"/>
    <meta property="og:site_name" content="Design System | University of Michigan Library">
    <meta name="twitter:card" content="summary_large_image"/>

    <link rel="icon" href="/static/images/favicon-32x32.png" type="image/png"/>
    <!-- Production umich-lib styles -->
    <link
      href="https://unpkg.com/@umich-lib/css@v1/dist/umich-lib.css"
      rel="stylesheet"/>

    <!-- Development umich-lib styles -->
    <!-- <link rel="stylesheet" href="{{ '/css/umich-lib.css' | url }}"/> -->
    <link rel="stylesheet" href="{{ '/styles/global.css' | url }}"/>
    <script
      type="module"
      src="{{ '/static/components/umich-lib/umich-lib.esm.js' | url }}"></script>
    <script
      nomodule
      src="{{ '/static/components/umich-lib/umich-lib.js' | url }}"></script>
  </head>
  <body>
    <m-universal-header></m-universal-header>
    <m-website-header name="Design System"></m-website-header>

    {{ content | safe }}

    {% include 'footer.njk' %}

    <script src="https://unpkg.com/anchor-js/anchor.min.js"></script>
    <script src="/sw.js"></script>
    <script>
      /**
      * Copier
      *
      * Use a <button> and data attribute to
      * enable copy to clipboard browser feature.
      *
      * attr name        value (JSON stringified)
      * [data-copier]    eg, JSON.stringify({ text: "copy me" })
      *
      * Example:
      *
      * <button
      *   disabled
      *   data-copier="{&quot;text&quot;: &quot;<p>Hello, people!</p>&quot;}"
      *  >Copy HTML</button>
      */
      (function () {
        const copierAttr = 'data-copier'
        const copierElementSelector = `button[${copierAttr}]`
        const copierLabel = "Copy HTML";
        const copierSuccessLabel = 'Copied <span aria-hidden="true">üñ®Ô∏è</span> !';
        const copierFailureLabel = "Copier out of order"

        function setupCopiers() {
          document
            .querySelectorAll(copierElementSelector)
            .forEach(createCopier(btn));
        }

        function setupCopier(btn) {
          if (canBrowserCopy()) {
            disableCopier(btn)
          } else {
            createCopier(btn)
          }
        }

        function canBrowserCopy() {
          return !!navigator.clipboard
        }

        function createCopier(btn) {
          btn.addEventListener('click', function (event) {
            requestCopy(btn, event);
          });

          btn.removeAttribute('disabled');
        }

        function disableCopier(btn) {
          btn.setAttribute('disabled', true);
        }

        function requestCopy(btn, event) {
          try {
            const text = JSON
              .parse(btn.getAttribute(copierAttr))
              .text;

            if (!text) {
              const error = "The copier has no text to copy.";
              console.warn(error, btn, event)
              throw error
            }

            navigator
              .clipboard
              .writeText(text)
              .then(handleCopySuccess(btn))
          } catch (err) {
            copyFailed(btn, err)
          }
        }

        function handleCopySuccess(btn) {
          /*
           * Set role="alert" on the copier so that on success
           * the label is announced to users.
           *
           * Docs: https://www.w3.org/TR/wai-aria-practices-1.1/#alert
          **/
          btn.setAttribute('role', 'alert');
          btn.innerHTML = copierSuccessLabel;

          setTimeout(function () {
            btn.removeAttribute('role');
            btn.innerText = copierLabel;
          }, 3000)
        }

        function handleCopyFailure(btn, err) {
          btn.setAttribute('disabled', true);
          btn.innerText = copierFailureLabel
          console.error('Failed to copy to clipboard!', err)
        }

        setupCopiers()
      }());
    </script>
  </body>
</html>